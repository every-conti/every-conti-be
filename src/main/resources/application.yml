security:
  jwt:
    access-secret-key:
      ${SPRING_JWT_ACCESS_SECRET_KEY}
    refresh-secret-key:
      ${SPRING_JWT_REFRESH_SECRET_KEY}

web:
  cors:
    origins:
      - ${SPRING_WEB_CORS_ORIGINS}

spring:
  application:
    name: every-conti
    env: oper  # dev 환경 설정 (oper로 바꾸려면 여기를 변경)

  org:
    hashids:
      hash-id-salt: ${SPRING_HASHID_SALT}  # 여기에 salt 입력

  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 4

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      ssl:
        enabled: false   # Docker 내부 통신이므로 SSL 불필요
    elasticsearch:
      uris: ${SPRING_ELASTICSEARCH_URIS:http://elasticsearch:9200}
      username: ${SPRING_ELASTICSEARCH_USERNAME:elastic}
      password: ${SPRING_ELASTICSEARCH_PASSWORD:}


  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: everyconti@gmail.com
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true

logging:
  level:
    org:
      hibernate:
        SQL: WARN
        type:
          descriptor:
            sql:
              BasicBinder: WARN
      org.elasticsearch.client: TRACE

api:
  youtube:
    api-key: ${SPRING_YOUTUBE_API_KEY}

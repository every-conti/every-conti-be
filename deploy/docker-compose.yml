version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${SPRING_DATASOURCE_ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock: { soft: -1, hard: -1 }
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - esplugins:/usr/share/elasticsearch/plugins
    ports:
      - "127.0.0.1:9200:9200"
    command: >
      bash -lc "
        if [ ! -d plugins/analysis-nori ]; then
          bin/elasticsearch-plugin install --batch analysis-nori;
        fi
        exec bin/elasticsearch
      "
    restart: unless-stopped

  redis:
    image: redis:7.2
    command: ["redis-server","--appendonly","yes","--requirepass","${SPRING_DATASOURCE_REDIS_PASSWORD}"]
    volumes:
      - redisdata:/data
    ports:
      - "127.0.0.1:6379:6379"
    restart: unless-stopped

  app:
    image: ghcr.io/every-conti/everyconti-backend:${SPRING_DATASOURCE_APP_TAG:-latest}
    container_name: everyconti-app
    depends_on:
      - redis
      - elasticsearch
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - REDIS_URL=redis://:${SPRING_DATASOURCE_REDIS_PASSWORD}@redis:6379
      - ELASTIC_URL=http://elasticsearch:9200
    expose:
      - "8080"   # 내부 노출만, 외부는 Caddy 통해 접근
    volumes:
      - /home/azureuser/everyconti/log:/app/log
    restart: unless-stopped

  caddy:
    image: caddy:2.8
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app
    restart: unless-stopped

volumes:
  esdata:
  esplugins:
  redisdata:
  caddy_data:
  caddy_config:
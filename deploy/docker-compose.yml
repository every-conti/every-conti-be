services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${SPRING_ELASTICSEARCH_PASSWORD}
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - path.repo=/mnt/es-backup
    ulimits:
      memlock: { soft: -1, hard: -1 }
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - esplugins:/usr/share/elasticsearch/plugins
      - /mnt/es-backup:/mnt/es-backup
    ports:
      - "127.0.0.1:9200:9200"
    command:
      - bash
      - -c
      - |
        if [ ! -d "/usr/share/elasticsearch/plugins/analysis-nori" ]; then
          bin/elasticsearch-plugin install --batch analysis-nori;
        fi
        exec bin/elasticsearch
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.2
    command: ["redis-server","--appendonly","yes","--requirepass","${SPRING_DATA_REDIS_PASSWORD}"]
    volumes:
      - redisdata:/data
    ports:
      - "127.0.0.1:6379:6379"
    restart: unless-stopped

  app:
    # ðŸ‘‰ í™˜ê²½ë³€ìˆ˜ APP_IMAGE ë¡œ ë¶„ê¸°
    image: ${APP_IMAGE:-everyconti-backend-local}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: everyconti-app
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - REDIS_URL=redis://:${SPRING_DATA_REDIS_PASSWORD}@redis:6379
      - ELASTIC_URL=http://elasticsearch:9200
    ports:
      - "8080:8080"
    expose:
      - "8080"
    restart: unless-stopped
    env_file:
      - .env

  caddy:
    image: caddy:2.8
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app
    restart: unless-stopped

volumes:
  esdata:
  esplugins:
  redisdata:
  caddy_data:
  caddy_config: